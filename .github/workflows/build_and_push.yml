name: Auto Build Docker Image on New Release

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次（UTC时间）
  workflow_dispatch:       # 允许手动触发

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
      release-tag: ${{ steps.get-latest.outputs.tag }}
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get latest release tag
        id: get-latest
        run: |
          response=$(curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/innei/shiro/releases/latest)
          tag=$(echo "$response" | jq -r '.tag_name')
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "latest_tag=$tag" >> $GITHUB_ENV

      - name: Restore last tag from cache
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: last_tag.txt
          key: last-tag

      - name: Compare tags
        id: check
        run: |
          if [ -f last_tag.txt ]; then
            last_tag=$(cat last_tag.txt)
          else
            last_tag=""
          fi
          current_tag=${{ env.latest_tag }}
          
          if [ "$current_tag" != "$last_tag" ] && [ -n "$current_tag" ]; then
            echo "::set-output name=should-build::true"
            echo "$current_tag" > last_tag.txt
          else
            echo "::set-output name=should-build::false"
          fi
          echo "release-tag=$current_tag" >> $GITHUB_OUTPUT

      - name: Save new tag to cache
        if: steps.check.outputs.should-build == 'true'
        uses: actions/cache@v3
        with:
          path: last_tag.txt
          key: last-tag

  build-docker:
    needs: check-release
    if: needs.check-release.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: innei/shiro
          ref: ${{ needs.check-release.outputs.release-tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            your-dockerhub-username/shiro  # 替换为您的Docker Hub用户名
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}